<script lang="ts">
  import { afterNextRender, inject } from '@angular/core';
  import { NavigationEnd, Router } from '@angular/router';
  import { SwUpdate, VersionReadyEvent } from '@angular/service-worker';
  import { filter, switchMap } from 'rxjs';
  import { PwaService } from './services/pwa.service';

  import Navigation from './components/navigation/Navigation.analog' with { analog: 'imports' };

  const router = inject(Router);
  const swUpdate = inject(SwUpdate);
  const pwaService = inject(PwaService);

  afterNextRender(() => {
    pwaService.initPwaPrompt();
    router.events
      .pipe(
        filter((event) => event instanceof NavigationEnd),
        switchMap(() => swUpdate.versionUpdates),
        filter((evt): evt is VersionReadyEvent => evt.type === 'VERSION_READY'),
      )
      .subscribe(() => {
        document.location.reload();
      });
  });
</script>

<template class="w-full">
  <Navigation class="h-full" />
</template>
